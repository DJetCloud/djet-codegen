openapi: 3.0.1
info:
  title: Folder API
  description: Folder service manages private user information. Party can have multiple
    folders to maintain different sets of information.
  version: 1.0.0
servers:
- url: http://localhost:8442
  description: Development server endpoint
- url: https://domain.app/folder/v1
  description: Stage Server endpoint
tags:
- name: FolderPatients
  description: Interface to access patient information from folder.
- name: FolderPractitioners
  description: Interface to access practitioner information from folder.
- name: Folders
  description: Interface to access folder which can contain patient or practitioner
    information.
paths:
  /parties/{partyId}/folders/{folderId}/patients/{patientId}:
    get:
      tags:
      - FolderPatients
      summary: GetPatient
      description: Get patient or list of patients from service.
      operationId: folderPatientsGetPatient
      parameters:
      - $ref: '#/components/parameters/bearer'
      - $ref: '#/components/parameters/options'
      - $ref: '#/components/parameters/startTime'
      - $ref: '#/components/parameters/endTime'
      responses:
        200:
          description: Patient is found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        400:
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        409:
          description: Entity don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - FolderPatients
      summary: UpdatePatient
      description: Change Patient specification. Patient will be created if not exist.
      operationId: folderPatientsUpdatePatient
      parameters:
      - $ref: '#/components/parameters/bearer'
      requestBody:
        $ref: '#/components/requestBodies/patient'
      responses:
        204:
          description: Operation completed successfully.
        400:
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        409:
          description: Entity don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - FolderPatients
      summary: ModifyPatient
      description: 'Change Patient properties to values specified in request. Property
        not specified will remain same. No element of any collection will be deleted. '
      operationId: folderPatientsModifyPatient
      parameters:
      - $ref: '#/components/parameters/bearer'
      requestBody:
        $ref: '#/components/requestBodies/patient'
      responses:
        204:
          description: Operation completed successfully.
        400:
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        409:
          description: Entity don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
    - $ref: '#/components/parameters/partyId'
    - $ref: '#/components/parameters/folderId'
    - $ref: '#/components/parameters/patientId'
  /parties/{partyId}/folders/{folderId}/patients:
    get:
      tags:
      - FolderPatients
      summary: GetPatientList
      description: Get patient or list of patients from service.
      operationId: folderPatientsGetPatientList
      parameters:
      - $ref: '#/components/parameters/bearer'
      - $ref: '#/components/parameters/options'
      - $ref: '#/components/parameters/startTime'
      - $ref: '#/components/parameters/endTime'
      - $ref: '#/components/parameters/search'
      responses:
        200:
          description: Patient is found and returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patient'
        400:
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        409:
          description: Entity don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - FolderPatients
      summary: CreatePatient
      description: Create new Patient. Validate Patient not yet exist.
      operationId: folderPatientsCreatePatient
      parameters:
      - $ref: '#/components/parameters/bearer'
      requestBody:
        $ref: '#/components/requestBodies/patient'
      responses:
        201:
          description: Object created successfully.
        400:
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        409:
          description: Entity don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Entity is already exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
    - $ref: '#/components/parameters/partyId'
    - $ref: '#/components/parameters/folderId'
  /parties/{partyId}/folders/{folderId}/practitioners/{practitionerId}:
    get:
      tags:
      - FolderPractitioners
      summary: GetPractitioner
      description: Get patient or list of patients from service.
      operationId: folderPractitionersGetPractitioner
      parameters: []
      responses:
        200:
          description: Patient is found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Practitioner'
        400:
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        409:
          description: Entity don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - FolderPractitioners
      summary: UpdatePractitioner
      description: Change Practitioner specification. The practitioner will be created
        if not exist.
      operationId: folderPractitionersUpdatePractitioner
      requestBody:
        $ref: '#/components/requestBodies/practitioner'
      responses:
        204:
          description: Operation completed successfully.
        400:
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        409:
          description: Entity don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - FolderPractitioners
      summary: ModifyPractitioner
      description: 'Change Practitioner properties to values specified in the request.
        Property not specified will remain same. No element of any collection will
        be deleted. '
      operationId: folderPractitionersModifyPractitioner
      requestBody:
        $ref: '#/components/requestBodies/practitioner'
      responses:
        204:
          description: Operation completed successfully.
        400:
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        409:
          description: Entity don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
    - $ref: '#/components/parameters/partyId'
    - $ref: '#/components/parameters/folderId'
    - $ref: '#/components/parameters/practitionerId'
  /parties/{partyId}/folders/{folderId}/practitioners:
    get:
      tags:
      - FolderPractitioners
      summary: GetPractitionerList
      description: Get patient or list of patients from service.
      operationId: folderPractitionersGetPractitionerList
      parameters:
      - $ref: '#/components/parameters/search'
      responses:
        200:
          description: Patient is found and returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Practitioner'
        400:
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        409:
          description: Entity don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - FolderPractitioners
      summary: CreatePractitioner
      description: Create new Patient. Validate Patient not yet exist.
      operationId: folderPractitionersCreatePractitioner
      parameters:
      - $ref: '#/components/parameters/bearer'
      requestBody:
        $ref: '#/components/requestBodies/practitioner'
      responses:
        201:
          description: Object created successfully.
        400:
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        409:
          description: Entity don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Entity is already exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
    - $ref: '#/components/parameters/partyId'
    - $ref: '#/components/parameters/folderId'
  /parties/partyid/folders/{folderId}:
    get:
      tags:
      - Folders
      summary: GetFolder
      description: Get user or list of folders from service.
      operationId: foldersGetFolder
      parameters:
      - $ref: '#/components/parameters/bearer'
      - $ref: '#/components/parameters/options'
      - $ref: '#/components/parameters/startTime'
      - $ref: '#/components/parameters/endTime'
      responses:
        200:
          description: Folder is found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        400:
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        409:
          description: Entity don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Folders
      summary: UpdateFolder
      description: Change Folder specification. Folder will be created if not exist.
      operationId: foldersUpdateFolder
      parameters:
      - $ref: '#/components/parameters/bearer'
      requestBody:
        $ref: '#/components/requestBodies/folder'
      responses:
        204:
          description: Operation completed successfully.
        400:
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        409:
          description: Entity don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Folders
      summary: ModifyFolder
      description: 'Change Folder properties to values specified in request. Property
        not specified will remain same. No element of any collection will be deleted. '
      operationId: foldersModifyFolder
      parameters:
      - $ref: '#/components/parameters/bearer'
      requestBody:
        $ref: '#/components/requestBodies/folder'
      responses:
        204:
          description: Operation completed successfully.
        400:
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        409:
          description: Entity don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
    - $ref: '#/components/parameters/partyId'
    - $ref: '#/components/parameters/folderId'
  /parties/partyid/folders:
    get:
      tags:
      - Folders
      summary: GetFolderList
      description: Get user or list of folders from service.
      operationId: foldersGetFolderList
      parameters:
      - $ref: '#/components/parameters/bearer'
      - $ref: '#/components/parameters/options'
      - $ref: '#/components/parameters/startTime'
      - $ref: '#/components/parameters/endTime'
      - $ref: '#/components/parameters/search'
      responses:
        200:
          description: Folder is found and returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Folder'
        400:
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        409:
          description: Entity don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Folders
      summary: CreateFolder
      description: Create new Folder. Validate Folder not yet exist.
      operationId: foldersCreateFolder
      parameters:
      - $ref: '#/components/parameters/bearer'
      requestBody:
        $ref: '#/components/requestBodies/folder'
      responses:
        201:
          description: Object created successfully.
        400:
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        409:
          description: Entity don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Entity is already exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
    - $ref: '#/components/parameters/partyId'
components:
  schemas:
    Identity:
      type: object
      properties:
        id:
          type: integer
          description: Id of the object. It is global unique identificator, optional
            for minor objects and required for major objects. When object created
            Id will be generated by backend service.
          format: guid
          x-data-type: Guid
        name:
          type: string
          description: Name of the object. It is textual object identificator, need
            to be unique inside folder of the object.
          x-data-type: String
        description:
          type: string
          description: Description for the object functionality. It is text with specification
            of object and way it used in application.
          x-data-type: String
      description: Identity of object in DifHub. Objects can be identify by globaly
        unique Id and localy unique name.
      x-data-type: Structure
      x-version: 1.6.0
      x-path: /organizations/Apdax/systems/DifHub/applications/Organization/datasets/Identity
    EntityType:
      type: string
      description: Enumerator of entity types. Here listed all resources available
        in organization.
      enum:
      - USER
      - CONTACT
      - PERSON
      - PARTY
      - ACCOUNT
      - LEGALENTITY
      - FOLDER
      - PATIENT
      - PRACTITIONER
      x-enum-metadata:
      - name: User
        value: USER
        description: User of the Medical Network.
      - name: Contact
        value: CONTACT
        description: Contact information for organization or other entities.
      - name: Person
        value: PERSON
        description: Person represented in the system for contact.
      - name: Party
        value: PARTY
        description: Main component of the network
      - name: Account
        value: ACCOUNT
        description: Party account for financial transactions.
      - name: Legal Entity
        value: LEGALENTITY
        description: Legal entity information for the party.
      - name: Folder
        value: FOLDER
        description: Folder to collect personal information.
      - name: Patient
        value: PATIENT
        description: Patient personal information
      - name: Practitioner
        value: PRACTITIONER
        description: Personal data for practitioner.
      x-data-type: Enum
      x-version: 1.2.0
      x-path: /organizations/Infort Technologies/systems/infrastructure/applications/Core/datasets/EntityType
    EntityState:
      type: string
      description: Enumerator of the entity state.
      enum:
      - DRAFT
      - PENDING
      - ACTIVE
      - RETIRED
      - ERROR
      x-enum-metadata:
      - name: Draft
        value: DRAFT
        description: Entity in draft state and not ready yet for approval.
      - name: Pending
        value: PENDING
        description: Entity pending approval and can't be used.
      - name: Active
        value: ACTIVE
        description: Entity in active state and can be used.
      - name: Retired
        value: RETIRED
        description: Entity retired and cannot be executed any more.
      - name: Error
        value: ERROR
        description: Entity in have error and can't be used.
      x-data-type: Enum
      x-version: 1.1.0
      x-path: /organizations/Infort Technologies/systems/infrastructure/applications/Core/datasets/EntityState
    BindingType:
      type: string
      description: 'Binding type represent system we are binding our entity to. '
      enum:
      - ERP
      x-enum-metadata:
      - name: 'ERP '
        value: ERP
        description: Corporate ERP system used in company.
      x-data-type: Enum
      x-version: 1.1.0
      x-path: /organizations/Infort Technologies/systems/infrastructure/applications/Core/datasets/BindingType
    Binding:
      required:
      - identity
      - type
      type: object
      properties:
        identity:
          description: Binding identity in system it imported from or exported to.
            Id is globally unique. Name is unique binding name inside entity only.
          allOf:
          - $ref: '#/components/schemas/Identity'
        type:
          description: Type of binding defines system we bind to.
          allOf:
          - $ref: '#/components/schemas/BindingType'
        code:
          type: string
          description: Code of object in system we bind to if different from id.
          x-data-type: String
      description: 'Binding represents connection of entity to entity in other external
        systems. It can be system where entity actually originated ond from which
        it was imported or system where entity exported. '
      x-data-type: Structure
      x-version: 1.1.0
      x-path: /organizations/Infort Technologies/systems/infrastructure/applications/Core/datasets/Binding
    Completion:
      required:
      - status
      type: object
      properties:
        status:
          description: Completion Status for some state of execution.
          allOf:
          - $ref: '#/components/schemas/EntityState'
        completedAt:
          type: string
          description: Date of status acived and satge of activity completed.
          format: date-time
          x-data-type: DateTime
        completedBy:
          type: string
          description: Person documented completion of this stage by user name.
          x-data-type: String
        completedNote:
          type: string
          description: Note provided by operator on completion.
          x-data-type: String
        completedMessage:
          type: string
          description: This is link to message, which change status of the issue to
            specified by this completion.
          x-data-type: String
      description: 'Completion status for stage of execution like: finilization, aproval
        and so on.'
      x-data-type: Structure
      x-version: 1.1.0
      x-path: /organizations/Infort Technologies/systems/infrastructure/applications/Core/datasets/Completion
    History:
      required:
      - updatedAt
      type: object
      properties:
        createdAt:
          type: string
          description: Date of object creation.
          format: date-time
          x-data-type: DateTime
        createdBy:
          type: string
          description: User created object.
          x-data-type: String
        updatedAt:
          type: string
          description: Date of object last update.
          format: date-time
          x-data-type: DateTime
        updatedBy:
          type: string
          description: User last updated object.
          x-data-type: String
        updatedNote:
          type: string
          description: Mote about goal of object update.
          x-data-type: String
        updatedMessage:
          type: string
          description: Message in issue associated with changes in object.
          x-data-type: String
        retiredAt:
          type: string
          description: Date object was retired.
          format: date-time
          x-data-type: DateTime
        retiredBy:
          type: string
          description: User retired object.
          x-data-type: String
        completions:
          type: array
          description: Array of completion statuses reached by this object.
          items:
            description: Array of completion statuses reached by this object.
            allOf:
            - $ref: '#/components/schemas/Completion'
      description: Structure for object history. Object history provides information
        when object was updated and in what completion state it is now.
      x-data-type: Structure
      x-version: 1.2.0
      x-path: /organizations/Infort Technologies/systems/infrastructure/applications/Core/datasets/History
    Entity:
      type: object
      properties:
        parent:
          description: Reference to id of folder for current entity. It include URI
            of parent entity in name.
          allOf:
          - $ref: '#/components/schemas/Identity'
        type:
          description: Type of the entity.
          allOf:
          - $ref: '#/components/schemas/EntityType'
        state:
          description: State of the entity
          allOf:
          - $ref: '#/components/schemas/EntityState'
        active:
          type: boolean
          description: This entity record is in active use
          x-data-type: Boolean
          x-FHIR: Include
        managingOrganization:
          type: string
          description: The organization that is the custodian of the entity
          format: 'system:  | application:  | dataType: Identity'
          x-data-type: Reference
          x-FHIR: Include
        source:
          description: Source system originated the entity. If not specified entity
            instantiated by core system.
          allOf:
          - $ref: '#/components/schemas/BindingType'
        bindings:
          type: array
          description: Reference to entity system bind to.
          items:
            description: Reference to entity system bind to.
            allOf:
            - $ref: '#/components/schemas/Binding'
        tags:
          type: array
          description: List of tags for entity association.
          items:
            description: List of tags for entity association.
            allOf:
            - $ref: '#/components/schemas/Identity'
        history:
          description: History of the entity instance.
          allOf:
          - $ref: '#/components/schemas/History'
      description: Updatable entity. Entity can be accessed by API and referenced.
      x-data-type: Structure
      x-version: 1.6.0
      x-path: /organizations/Infort Technologies/systems/infrastructure/applications/Core/datasets/Entity
    FolderType:
      type: string
      description: 'Type of folder. Folder can be Personal, manage by Patient or Clinic
        - managed by organization. '
      enum:
      - PERSONAL
      - CLINIC
      x-enum-metadata:
      - name: Personal
        value: PERSONAL
        description: Personal folder managed by Patient.
      - name: Clinic
        value: CLINIC
        description: Folder managed by doctors of specific Clinic on behave of the
          patient.
      x-data-type: Enum
      x-version: 1.1.0
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/FolderType
    Folder:
      required:
      - account
      - entity
      - identity
      type: object
      properties:
        identity:
          description: Folder Identity, we will use Guid for globally unique folder
            id. Name usually based on patient name and need to be unique inside party.
          allOf:
          - $ref: '#/components/schemas/Identity'
        entity:
          description: Folder is a  resource used by API.  Entity maintain most common
            resource information. Parent for entity of folder is a party.
          allOf:
          - $ref: '#/components/schemas/Entity'
        type:
          description: 'Type of the folder. '
          allOf:
          - $ref: '#/components/schemas/FolderType'
        master:
          type: string
          description: Reference to the private folder of actual person owe the folder.
            For folder maintained by Clinic this property point to personal folder
            of patient, doctor or provider. For personal folders this property empty.
          format: 'system: Client | application: Folder | dataType: Folder'
          x-data-type: Reference
        account:
          type: string
          description: Account of party associated with the folder and will manage
            financial transaction associated with folder.
          format: 'system: Client | application: Party | dataType: Account'
          x-data-type: Reference
      description: 'Folder maintain set of information associated with some person.
        Folder can be Personal, maintain by patient and Clinic, maintained by doctors.
        Personal folder contains all person history across all Clinics. Personal folder
        encrypted by Patient Public Key (PEK) generated per folder and can be accessed
        only by patient. Clinic''s folder organized by patient too. This records encrypted
        by Clinic Public Key (CEK), generated per folder. Information generated by
        Clinics exist in two copies: one in Personal folder of patient and one in
        Clinic folder for this patient. In case Patient lost patient private key (PDK)
        this information can be decoded and restored from Clinic folder using Clinic
        private key (CDK). Personal record will be lost in case Patient lost PDK.'
      x-data-type: Resource
      x-version: 1.1.0
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/Folder
    MaritalStatus:
      type: string
      description: Marital (civil) status of a patient. Include all codes defined
        in http://terminology.hl7.org/CodeSystem/v3-MaritalStatus
      enum:
      - A
      - D
      - I
      - L
      - M
      - P
      - S
      - T
      - U
      - W
      - UNK
      x-enum-metadata:
      - name: Annulled
        value: A
        description: Marriage contract has been declared null and to not have existed
      - name: Divorced
        value: D
        description: Marriage contract has been declared dissolved and inactive
      - name: Interlocutory
        value: I
        description: Subject to an Interlocutory Decree.
      - name: Legally Separated
        value: L
        description: Legally Separated
      - name: Married
        value: M
        description: A current marriage contract is active
      - name: Polygamous
        value: P
        description: More than 1 current spouse
      - name: Never Married
        value: S
        description: No marriage contract has ever been entered
      - name: Domestic partner
        value: T
        description: Person declares that a domestic partner relationship exists.
      - name: unmarried
        value: U
        description: Currently not in a marriage contract.
      - name: Widowed
        value: W
        description: The spouse has died
      - name: unknown
        value: UNK
        description: 'Description:A proper value is applicable, but not known. Usage
          Notes: This means the actual value is not known. If the only thing that
          is unknown is how to properly express the value in the necessary constraints
          (value set, datatype, etc.), then the OTH or UNC flavor should be used.
          No properties should be included for a datatype with this property unless:
          Those properties themselves directly translate to a semantic of ''unknown''.
          (E.g. a local code sent as a translation that conveys ''unknown'') Those
          properties further qualify the nature of what is unknown. (E.g. specifying
          a use code of ''H'' and a URL prefix of ''tel:'' to convey that it is the
          home phone number that is unknown.)'
      x-data-type: Enum
      x-version: 1.1.0
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/MaritalStatus
    Type:
      type: string
      description: Enumerator of value types supported by service. Types enumerator
        contains map from native DifHub types to types supported by platforms.
      enum:
      - "1"
      - "2"
      - "3"
      - "4"
      - "5"
      - "6"
      - "7"
      - "8"
      - "9"
      - "10"
      - "11"
      - "12"
      - "13"
      - "14"
      - "15"
      - "16"
      - "17"
      - "18"
      - "19"
      - "20"
      - "21"
      - "22"
      - "23"
      - "24"
      - "25"
      - "26"
      - "27"
      - "28"
      x-enum-metadata:
      - name: Boolean
        value: "1"
        description: One bit boolean value.
      - name: Small
        value: "2"
        description: Signed one byte integer.
      - name: Short
        value: "3"
        description: Signed two bytes integer.
      - name: Medium
        value: "4"
        description: Signed three bytes integer.
      - name: Integer
        value: "5"
        description: Signed four bytes integer.
      - name: Long
        value: "6"
        description: Signed eight bytes integer.
      - name: Huge
        value: "7"
        description: Signed sixteen bytes integer.
      - name: Byte
        value: "8"
        description: Unsigned one byte integer.
      - name: Unsigned Short
        value: "9"
        description: Unsigned two bytes integer.
      - name: Unsigned Integer
        value: "10"
        description: Unsigned four bytes integer.
      - name: Unsigned Long
        value: "11"
        description: Unsigned eight bytes integer.
      - name: Unsigned Huge
        value: "12"
        description: Signed sixteen bytes integer.
      - name: Float
        value: "13"
        description: Floating point four bytes numeric value.
      - name: Double
        value: "14"
        description: Floating point eight bytes numeric value.
      - name: Decimal
        value: "15"
        description: Fixed precision and scale numbers.
      - name: Bit
        value: "16"
        description: Variable-length bit array.
      - name: Text
        value: "17"
        description: Variable-length, non-Unicode text data.
      - name: String
        value: "18"
        description: Variable-length Unicode string data.
      - name: Binary
        value: "19"
        description: Binary array.
      - name: Date
        value: "20"
        description: Defines a date.
      - name: Time
        value: "21"
        description: Defines a time.
      - name: DateTime
        value: "22"
        description: Defines a date and time.
      - name: TimeSpan
        value: "23"
        description: Defines a time period in hours minutes and seconds.
      - name: Money
        value: "24"
        description: Represent monetary or currency values.
      - name: Guid
        value: "25"
        description: Represent global unique identifier.
      - name: Enum
        value: "26"
        description: Represent reference to enumerator definision.
      - name: Structure
        value: "27"
        description: Represent reference to structure definision of dataset. When
          use ? mark, it is reference datasets of specific usage and represent property
          with type as structure with dataset of specified usage and value as JSON
          of object of this structure.
      - name: Reference
        value: "28"
        description: Represent reference to othe structure. This structure not part
          of the field, only identity or key of this structure will be presented.
      x-data-type: Enum
      x-version: 1.10.0
      x-path: /organizations/Apdax/systems/DifHub/applications/Organization/datasets/Type
    Variant:
      required:
      - value
      type: object
      properties:
        type:
          description: Type of value variant contains.
          allOf:
          - $ref: '#/components/schemas/Type'
        value:
          type: string
          description: Value of type variant maintained.
          x-data-type: String
      description: Structure to maintain value of specific type.
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/Apdax/systems/DifHub/applications/Organization/datasets/Variant
    PatientContactRelationship:
      type: string
      description: The kind of relationship. All codes from system http://terminology.hl7.org/CodeSystem/v2-0131
      enum:
      - C
      - E
      - F
      - I
      - N
      - S
      - U
      x-enum-metadata:
      - name: Emergency Contact
        value: C
        description: Patient contact in case of emergency.
      - name: Employer
        value: E
        description: |
          Contact information for patient employer.
      - name: Federal Agency
        value: F
        description: Contact information for federal agency responsible for the patient.
      - name: Insurance Company
        value: I
        description: |
          Contact information for patient insurance company.
      - name: Next-of-Kin
        value: N
        description: "Contact with next of kin for the patient.\n "
      - name: State Agency
        value: S
        description: Contact with State agency responsible for the patient.
      - name: Unknown
        value: U
        description: Contact with unknown function.
      x-data-type: Enum
      x-version: 1.1.0
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/PatientContactRelationship
    Period:
      type: object
      properties:
        start:
          type: string
          description: Starting time with inclusive boundary
          format: date-time
          x-data-type: DateTime
        end:
          type: string
          description: End time with inclusive boundary, if not ongoing.
          format: date-time
          x-data-type: DateTime
      description: "A time period defined by a start and end date/time. \nA period\
        \ specifies a range of times. The context of use will specify whether the\
        \ entire range applies (e.g. \"the patient was an inpatient of the hospital\
        \ for this time range\") or one value from the period applies (e.g. \"give\
        \ to the patient between 2 and 4 pm on 24-Jun 2013\"). This is simple period\
        \ used not as part of array of elements."
      x-data-type: Structure
      x-version: 1.3.0
      x-path: /organizations/Infort Technologies/systems/infrastructure/applications/Core/datasets/Period
    PatientContact:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          description: Id of the object
          format: guid
          x-data-type: Guid
        ' relationship ':
          description: The kind of relationship
          allOf:
          - $ref: '#/components/schemas/PatientContactRelationship'
        contact:
          type: string
          description: Reference to contact resource with contact information of organization
            or person.
          format: 'system: Client | application: User | dataType: Contact'
          x-data-type: Reference
        period:
          description: Time period when the contact point was/is in use.
          allOf:
          - $ref: '#/components/schemas/Period'
      description: |
        A contact person or organization for patient for different needs.
      x-data-type: Structure
      x-version: 1.2.1
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/PatientContact
    PatientRelationshipType:
      type: string
      description: "The kind of relationship. Include codes from http://terminology.hl7.org/CodeSystem/v3-RoleCode\
        \ where concept is-a _PersonalRelationshipRoleType\n "
      enum:
      - FAMMEMB
      - CHILD
      - CHLDADOPT
      - DAUADOPT
      - SONADOPT
      - CHLDFOST
      - DAUFOST
      - SONFOST
      - DAUC
      - DAU
      - STPDAU
      - NCHILD
      - SON
      - SONC
      - STPSON
      - STPCHLD
      - EXT
      - AUNT
      - MAUNT
      - PAUNT
      - COUSN
      - MCOUSN
      - PCOUSN
      x-enum-metadata:
      - name: family member
        value: FAMMEMB
        description: A relationship between two people characterizing their 'familial'
          relationship
      - name: child
        value: CHILD
        description: The player of the role is a child of the scoping entity.
      - name: adopted child
        value: CHLDADOPT
        description: The player of the role is a child taken into a family through
          legal means and raised by the scoping person (parent) as his or her own
          child.
      - name: adopted daughter
        value: DAUADOPT
        description: The player of the role is a female child taken into a family
          through legal means and raised by the scoping person (parent) as his or
          her own child.
      - name: adopted son
        value: SONADOPT
        description: The player of the role is a male child taken into a family through
          legal means and raised by the scoping person (parent) as his or her own
          child.
      - name: foster child
        value: CHLDFOST
        description: The player of the role is a child receiving parental care and
          nurture from the scoping person (parent) but not related to him or her through
          legal or blood ties.
      - name: foster daughter
        value: DAUFOST
        description: The player of the role is a female child receiving parental care
          and nurture from the scoping person (parent) but not related to him or her
          through legal or blood ties.
      - name: foster son
        value: SONFOST
        description: The player of the role is a male child receiving parental care
          and nurture from the scoping person (parent) but not related to him or her
          through legal or blood ties.
      - name: daughter
        value: DAUC
        description: The player of the role is a female child (of any type) of scoping
          entity (parent)
      - name: natural daughter
        value: DAU
        description: The player of the role is a female offspring of the scoping entity
          (parent).
      - name: stepdaughter
        value: STPDAU
        description: The player of the role is a daughter of the scoping person's
          spouse by a previous union.
      - name: natural child
        value: NCHILD
        description: The player of the role is an offspring of the scoping entity
          as determined by birth.
      - name: natural son
        value: SON
        description: The player of the role is a male offspring of the scoping entity
          (parent).
      - name: son
        value: SONC
        description: he player of the role is a male child (of any type) of scoping
          entity (parent)
      - name: stepson
        value: STPSON
        description: The player of the role is a son of the scoping person's spouse
          by a previous union.
      - name: step child
        value: STPCHLD
        description: The player of the role is a child of the scoping person's spouse
          by a previous union.
      - name: extended family member
        value: EXT
        description: A family member not having an immediate genetic or legal relationship
          e.g. Aunt, cousin, great grandparent, grandchild, grandparent, niece, nephew
          or uncle.
      - name: aunt
        value: AUNT
        description: The player of the role is a sister of the scoping person's mother
          or father.
      - name: maternal aunt
        value: MAUNT
        description: The player of the role is a biological sister of the scoping
          person's biological mother.
      - name: paternal aunt
        value: PAUNT
        description: The player of the role is a biological sister of the scoping
          person's biological father.
      - name: cousin
        value: COUSN
        description: The player of the role is a relative of the scoping person descended
          from a common ancestor, such as a grandparent, by two or more steps in a
          diverging line.
      - name: maternal cousin
        value: MCOUSN
        description: The player of the role is a biological relative of the scoping
          person descended from a common ancestor on the player's mother's side, such
          as a grandparent, by two or more steps in a diverging line.
      - name: paternal cousin
        value: PCOUSN
        description: The player of the role is a biological relative of the scoping
          person descended from a common ancestor on the player's father's side, such
          as a grandparent, by two or more steps in a diverging line.
      x-data-type: Enum
      x-version: 1.1.0
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/PatientRelationshipType
    RelatedPerson:
      required:
      - id
      - profile
      type: object
      properties:
        id:
          type: integer
          description: Id of the entity.
          format: guid
          x-data-type: Guid
        relationship:
          description: The nature of the relationship.
          allOf:
          - $ref: '#/components/schemas/PatientRelationshipType'
        profile:
          type: string
          description: Reference to person object with personal information of patient.
          format: 'system: Client | application: User | dataType: Person'
          x-data-type: Reference
          x-FHIR: Unfold
        period:
          description: Period of time that this relationship is considered valid
          allOf:
          - $ref: '#/components/schemas/Period'
      description: "RelatedPersons typically have a personal or non-healthcare-specific\
        \ professional relationship to the patient. A RelatedPerson resource is primarily\
        \ used for attribution of information, since RelatedPersons are often a source\
        \ of information about the patient. For keeping information about people for\
        \ contact purposes for a patient, use a Patient's Contact element. Some individuals\
        \ may serve as both a Patient's Contact and a Related Person. \n\nA patient's\
        \ wife or husband\nA patient's relatives or friends\nA neighbor bringing a\
        \ patient to the hospital\nThe owner or trainer of a horse\nA patient's attorney\
        \ or guardian\nA Guide Dog"
      x-data-type: Structure
      x-version: 1.1.1
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/RelatedPerson
    Patient:
      required:
      - identity
      - profile
      type: object
      properties:
        identity:
          description: Person identity. Id is global (guid), Name is person email.
          allOf:
          - $ref: '#/components/schemas/Identity'
        entity:
          description: Person is an entity and can be created and updated through
            API.
          allOf:
          - $ref: '#/components/schemas/Entity'
        profile:
          type: string
          description: Reference to person object with personal information of patient.
          format: 'system: Client | application: User | dataType: Person'
          x-data-type: Reference
          x-FHIR: Unfold
        maritalStatus:
          description: Marital (civil) status of a patient
          allOf:
          - $ref: '#/components/schemas/MaritalStatus'
        ' multipleBirth':
          description: Whether patient is part of a multiple birth. Can be boolean
            or integer number.
          allOf:
          - $ref: '#/components/schemas/Variant'
        ' deceased':
          description: Indicates if the individual is deceased or not. Can be boolean
            or date.
          allOf:
          - $ref: '#/components/schemas/Variant'
        contact:
          type: array
          description: List of contacts for patient to use.
          items:
            description: List of contacts for patient to use.
            allOf:
            - $ref: '#/components/schemas/PatientContact'
        generalPractitioner:
          type: array
          description: Patient's nominated primary care provider
          items:
            type: string
            description: Patient's nominated primary care provider
            format: 'system: Client | application: Folder | dataType: Practitioner'
            x-data-type: Reference
        relatedPerson:
          type: array
          description: List of patient related persons.
          items:
            description: List of patient related persons.
            allOf:
            - $ref: '#/components/schemas/RelatedPerson'
      description: "An individual has identity outside of a healthcare setting. The\
        \ Person resource is used to capture this information and to relate the person\
        \ as an individual to other resources that do have a health-related context.\
        \ \nFor example, while a patient resource may be created and maintained by\
        \ each organization providing care for that person as a patient, a person\
        \ resource provides a mechanism for linking patient resources across different\
        \ organizations and their unique patient identity domains. "
      x-data-type: Resource
      x-version: 1.2.1
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/Patient
    QualificationCode:
      type: string
      description: " is used in the following places: \nResource: Practitioner.qualification.code"
      enum:
      - 'AA '
      - 'AAS '
      - 'ABA '
      - 'AE '
      - AS
      - BA
      - BBA
      - BE
      - BFA
      - BN
      - BS
      - BSL
      - BSN
      - BT
      - CANP
      - CER
      - CMA
      - 'CNM '
      - CNP
      - CNS
      - CPNP
      - CRN
      - CTR
      - DBA
      - DED
      - DIP
      - DO
      - EMT
      - EMTP
      - FPNP
      - HS
      - JD
      - MA
      - MBA
      - MCE
      - MD
      - MDA
      - MDI
      - ME
      - MED
      - MEE
      - MFA
      - MME
      - MS
      - MSL
      - MSN
      - MT
      - MTH
      - NG
      - NP
      - PA
      - PHD
      - PHE
      - PHS
      - PN
      - PharmD
      - RMA
      - RN
      - RPH
      - SEC
      - TS
      x-enum-metadata:
      - name: 'AA '
        value: 'AA '
        description: Associate of Arts
      - name: 'AAS '
        value: 'AAS '
        description: Associate of Applied Science
      - name: 'ABA '
        value: 'ABA '
        description: Associate of Business Administration
      - name: 'AE '
        value: 'AE '
        description: Associate of Engineering
      - name: AS
        value: AS
        description: Associate of Science
      - name: BA
        value: BA
        description: Bachelor of Arts
      - name: BBA
        value: BBA
        description: Bachelor of Business Administration
      - name: BE
        value: BE
        description: Bachelor or Engineering
      - name: BFA
        value: BFA
        description: Bachelor of Fine Arts
      - name: BN
        value: BN
        description: Bachelor of Nursing
      - name: BS
        value: BS
        description: Bachelor of Science
      - name: BSL
        value: BSL
        description: Bachelor of Science - Law
      - name: BSN
        value: BSN
        description: Bachelor on Science - Nursing
      - name: BT
        value: BT
        description: Bachelor of Theology
      - name: CANP
        value: CANP
        description: Certified Adult Nurse Practitioner
      - name: CER
        value: CER
        description: Certificate
      - name: CMA
        value: CMA
        description: Certified Medical Assistant
      - name: 'CNM '
        value: 'CNM '
        description: Certified Nurse Midwife
      - name: CNP
        value: CNP
        description: Certified Nurse Practitioner
      - name: CNS
        value: CNS
        description: Certified Nurse Specialist
      - name: CPNP
        value: CPNP
        description: Certified Pediatric Nurse Practitioner
      - name: CRN
        value: CRN
        description: Certified Registered Nurse
      - name: CTR
        value: CTR
        description: Certified Tumor Registrar
      - name: DBA
        value: DBA
        description: Doctor of Business Administration
      - name: DED
        value: DED
        description: Doctor of Education
      - name: DIP
        value: DIP
        description: Diploma
      - name: DO
        value: DO
        description: Doctor of Osteopathy
      - name: EMT
        value: EMT
        description: Emergency Medical Technician
      - name: EMTP
        value: EMTP
        description: Emergency Medical Technician - Paramedic
      - name: FPNP
        value: FPNP
        description: Family Practice Nurse Practitioner
      - name: HS
        value: HS
        description: High School Graduate
      - name: JD
        value: JD
        description: Juris Doctor
      - name: MA
        value: MA
        description: Master of Arts
      - name: MBA
        value: MBA
        description: Master of Business Administration
      - name: MCE
        value: MCE
        description: Master of Civil Engineering
      - name: MD
        value: MD
        description: Doctor of Medicine
      - name: MDA
        value: MDA
        description: Medical Assistant
      - name: MDI
        value: MDI
        description: Master of Divinity
      - name: ME
        value: ME
        description: Master of Engineering
      - name: MED
        value: MED
        description: Master of Education
      - name: MEE
        value: MEE
        description: Master of Electrical Engineering
      - name: MFA
        value: MFA
        description: Master of Fine Arts
      - name: MME
        value: MME
        description: Master of Mechanical Engineering
      - name: MS
        value: MS
        description: Master of Science
      - name: MSL
        value: MSL
        description: Master of Science - Law
      - name: MSN
        value: MSN
        description: Master of Science - Nursing
      - name: MT
        value: MT
        description: Medical Technician
      - name: MTH
        value: MTH
        description: Master of Theology
      - name: NG
        value: NG
        description: Non-Graduate
      - name: NP
        value: NP
        description: Nurse Practitioner
      - name: PA
        value: PA
        description: Physician Assistant
      - name: PHD
        value: PHD
        description: Doctor of Philosophy
      - name: PHE
        value: PHE
        description: Doctor of Engineering
      - name: PHS
        value: PHS
        description: Doctor of Science
      - name: PN
        value: PN
        description: Advanced Practice Nurse
      - name: PharmD
        value: PharmD
        description: Doctor of Pharmacy
      - name: RMA
        value: RMA
        description: Registered Medical Assistant
      - name: RN
        value: RN
        description: Registered Nurse
      - name: RPH
        value: RPH
        description: Registered Pharmacist
      - name: SEC
        value: SEC
        description: Secretarial Certificate
      - name: TS
        value: TS
        description: Trade School Graduate
      x-data-type: Enum
      x-version: 1.1.0
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/QualificationCode
    Qualification:
      required:
      - code
      - id
      type: object
      properties:
        id:
          type: integer
          description: Id of the object.
          format: guid
          x-data-type: Guid
        code:
          description: Coded representation of the qualification
          allOf:
          - $ref: '#/components/schemas/QualificationCode'
        period:
          type: string
          description: Period during which the qualification is valid
          x-data-type: String
        issuer:
          description: Organization that regulates and issues the qualification
          allOf:
          - $ref: '#/components/schemas/Identity'
      description: Certification, licenses, or training pertaining to the provision
        of care
      x-data-type: Structure
      x-version: 1.2.1
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/Qualification
    Practitioner:
      required:
      - identity
      - profile
      type: object
      properties:
        identity:
          description: Person identity. Id is global (guid), Name is person email.
          allOf:
          - $ref: '#/components/schemas/Identity'
        entity:
          description: Person is an entity and can be created and updated through
            API.
          allOf:
          - $ref: '#/components/schemas/Entity'
        profile:
          type: string
          description: Reference to person object with personal information of patient.
          format: 'system: Client | application: User | dataType: Person'
          x-data-type: Reference
          x-FHIR: Unfold
        qualification:
          type: array
          description: Certification, licenses, or training pertaining to the provision
            of care
          items:
            description: Certification, licenses, or training pertaining to the provision
              of care
            allOf:
            - $ref: '#/components/schemas/Qualification'
      description: "A person who is directly or indirectly involved in the provisioning\
        \ of healthcare. \n\nPractitioner covers all individuals who are engaged in\
        \ the healthcare process and healthcare-related services as part of their\
        \ formal responsibilities and this Resource is used for attribution of activities\
        \ and responsibilities to these individuals. Practitioners include (but are\
        \ not limited to): \nphysicians, dentists, pharmacists\nphysician assistants,\
        \ nurses, scribes\nmidwives, dietitians, therapists, optometrists, paramedics\n\
        medical technicians, laboratory scientists, prosthetic technicians, radiographers\n\
        social workers, professional homecare providers, official volunteers\nreceptionists\
        \ handling patient registration\nIT personnel merging or unmerging patient\
        \ records\nService animal (e.g., ward assigned dog capable of detecting cancer\
        \ in patients)\n\nPractitioner performs different roles within the same or\
        \ even different organizations. Depending on jurisdiction and custom, it may\
        \ be necessary to maintain a specific Practitioner Resource for each such\
        \ role or have a single Practitioner with multiple roles. The role can be\
        \ limited to a specific period, after which authorization for this role ends.\
        \ Note that the represented organization need not necessarily be the (direct)\
        \ employer of a Practitioner. "
      x-data-type: Resource
      x-version: 1.1.1
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/Practitioner
    VisitType:
      type: string
      description: Type of visit. Visit can be physical - actually patient visit clinics
        facility or service was provided on patient location, or virtual - using telecommunication
        and internet.
      enum:
      - "1"
      - "2"
      - "3"
      x-enum-metadata:
      - name: Clinic
        value: "1"
        description: Patient visit actual clinic's facilities.
      - name: Patient
        value: "2"
        description: Service was provided in patient location.
      - name: Virtual
        value: "3"
        description: Service was received by using telecommunication or internet.
      x-data-type: Enum
      x-version: 1.0.0
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/VisitType
    Property:
      required:
      - identity
      type: object
      properties:
        identity:
          description: Identity of the property.
          allOf:
          - $ref: '#/components/schemas/Identity'
        type:
          description: Type of the property data.
          allOf:
          - $ref: '#/components/schemas/Type'
        reference:
          type: string
          description: Reference to structure for types of structure, field or enum.
            Reference can be complete and include organization name, system name,
            application name and dataset name. Reference can be short and contain
            only dataset name. Version identify structure currently used and if not
            specified, it means last approved version.
          x-data-type: String
        value:
          type: string
          description: Property value.
          x-data-type: String
      description: Property of object. Property presented as Name/Value pair.
      x-data-type: Structure
      x-version: 1.2.0
      x-path: /organizations/Apdax/systems/DifHub/applications/System/datasets/Property
    VisitService:
      required:
      - endTime
      - identity
      - product
      - startTime
      type: object
      properties:
        identity:
          description: Identity of activity.
          allOf:
          - $ref: '#/components/schemas/Identity'
        product:
          type: string
          description: 'Reference to product service, which define operations and
            resources required for this service to execute. '
          format: 'system: Client | application: Product | dataType: Service'
          x-data-type: Reference
        configuration:
          type: array
          description: Service configuration. Set of properties required to define
            service. Product service define list of properties needed to define it.
          items:
            description: Service configuration. Set of properties required to define
              service. Product service define list of properties needed to define
              it.
            allOf:
            - $ref: '#/components/schemas/Property'
        order:
          type: integer
          description: Order of the service in the visit, when multiple services executed
            during one visit.
          format: short
          x-data-type: Short
        startTime:
          type: string
          description: Service scheduled end time.
          format: date-time
          x-data-type: DateTime
        endTime:
          type: string
          description: Service scheduled end time.
          format: date-time
          x-data-type: DateTime
      description: Visit service. Visit service represents actual service configured
        and scheduled to execute as part of the visit. Services executed sequentially.
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/VisitService
    VisitOperation:
      required:
      - identity
      type: object
      properties:
        identity:
          description: Identity of activity.
          allOf:
          - $ref: '#/components/schemas/Identity'
        operation:
          type: string
          description: 'Operation executed as part of activity. Operation configured
            for specific visit execution. '
          format: 'system: Client | application: Product | dataType: Operation'
          x-data-type: Reference
        configuration:
          type: array
          description: Set of properties to configure operation. Operation specified
            set of properties it need to be configured to make it executable. This
            properties need to be set. Input properties can be used to setup configuration.
          items:
            description: Set of properties to configure operation. Operation specified
              set of properties it need to be configured to make it executable. This
              properties need to be set. Input properties can be used to setup configuration.
            allOf:
            - $ref: '#/components/schemas/Property'
        jobs:
          type: string
          description: Jobs scheduled for resources required for operation execution.
          x-data-type: String
      description: Activity operation represents actual execution of operation or
        service.
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/VisitOperation
    VisitActivity:
      required:
      - identity
      type: object
      properties:
        identity:
          description: Identity of activity.
          allOf:
          - $ref: '#/components/schemas/Identity'
        parent:
          type: string
          description: Activity organized in hierarchies based on services it come
            from.
          format: 'system: Client | application: Folder | dataType: VisitActivity'
          x-data-type: Reference
        service:
          type: string
          description: 'Service current activity presented. Service assign only to
            parent activity representing service.. '
          format: 'system: Client | application: Product | dataType: Service'
          x-data-type: Reference
        inputs:
          type: array
          description: 'A list of inputs for activity. Inputs specify information
            from activity it depends on. '
          items:
            type: string
            description: 'A list of inputs for activity. Inputs specify information
              from activity it depends on. '
            format: 'system: Client | application: Folder | dataType: VisitActivity'
            x-data-type: Reference
        outputs:
          type: array
          description: The list of outputs for activity. Outputs define information
            for activities will depend on current activity.
          items:
            description: The list of outputs for activity. Outputs define information
              for activities will depend on current activity.
            allOf:
            - $ref: '#/components/schemas/Property'
        operations:
          type: array
          description: Operations executed as part of activity for visit
          items:
            description: Operations executed as part of activity for visit
            allOf:
            - $ref: '#/components/schemas/VisitOperation'
        startTime:
          type: object
          description: Activity start time in visit.
          x-data-type: Time
        endTime:
          type: object
          description: Activity end time in visit.
          x-data-type: Time
      description: Visit activity. Visit activity represents actual operations executed
        as part of service. Activity can execute one operation or multiple operations
        in parallel. Activities chained by input and output specification to define
        line of operations, or graph of operations in complex case.
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/VisitActivity
    Job:
      required:
      - date
      - endTime
      - entity
      - identity
      - startTime
      type: object
      properties:
        identity:
          description: 'Resource job Identity, we will use Guid for globally id. Name
            contain name of job schedule. Name expected to be unique inside resource.
            We will use time stamp of job start for name. '
          allOf:
          - $ref: '#/components/schemas/Identity'
        entity:
          description: Resource job used by API.  Entity maintain most common job
            information. Parent for job is a resource schedule.
          allOf:
          - $ref: '#/components/schemas/Entity'
        resource:
          type: string
          description: Actual resource job executed for in case resource schedule
            reference instance..
          format: 'system: Client | application: Product | dataType: Resource'
          x-data-type: Reference
        date:
          type: object
          description: Date time slot belong to.
          x-data-type: Date
        startTime:
          type: object
          description: Start time for slot.
          x-data-type: Time
        endTime:
          type: object
          description: End time for slot.
          x-data-type: Time
      description: Resource allocated for job, it will execute for specific operation.
      x-data-type: Resource
      x-version: 1.0.0
      x-path: /organizations/Infort Technologies/systems/Scheduling/applications/Schedule/datasets/Job
    VisitResource:
      required:
      - identity
      type: object
      properties:
        identity:
          description: Identity of activity.
          allOf:
          - $ref: '#/components/schemas/Identity'
        resource:
          type: string
          description: 'Reference to resource required for operations of the visit.
            Resource can be used in more than one operation during visit.  '
          format: 'system: Client | application: Product | dataType: Resource'
          x-data-type: Reference
        jobs:
          type: array
          description: Jobs scheduled for resource to perform in operations of the
            visit.
          items:
            description: Jobs scheduled for resource to perform in operations of the
              visit.
            allOf:
            - $ref: '#/components/schemas/Job'
      description: Resource used to support execution of the visit activities.
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/VisitResource
    VisitPlan:
      type: object
      properties:
        services:
          type: array
          description: Services planed for visit. Services executed in sequentially
            based on order property.
          items:
            description: Services planed for visit. Services executed in sequentially
              based on order property.
            allOf:
            - $ref: '#/components/schemas/VisitService'
        activities:
          type: array
          description: List of visit activities executed as part of the visit. Activities
            associated with activities defined in services scheduled for the patient.
          items:
            description: List of visit activities executed as part of the visit. Activities
              associated with activities defined in services scheduled for the patient.
            allOf:
            - $ref: '#/components/schemas/VisitActivity'
        resources:
          type: array
          description: Resources allocated for visit execution.
          items:
            description: Resources allocated for visit execution.
            allOf:
            - $ref: '#/components/schemas/VisitResource'
      description: Execution plan of the visit. Execution plan include operations
        need to be executed during visit and resources allocation for operations support.
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/VisitPlan
    Visit:
      required:
      - entity
      - identity
      - startTime
      type: object
      properties:
        identity:
          description: Visit Identity, we will use Guid for globally unique visit
            id. Name will be human friendly id, Description contains goal for visit..
          allOf:
          - $ref: '#/components/schemas/Identity'
        entity:
          description: Visit is a  resource used by API.  Entity maintain most common
            resource information. Parent for entity of visit is a folder.
          allOf:
          - $ref: '#/components/schemas/Entity'
        type:
          description: Type of the visit. Visit can be Virtual - using telecommunication
            or Physical - visiting some of clinic facility.
          allOf:
          - $ref: '#/components/schemas/VisitType'
        services:
          type: array
          description: Services scheduled for the visit. This is original set of services
            scheduled. When visit actually happens, this will be expanded to services
            actually executed in time of visit.
          items:
            type: string
            description: Services scheduled for the visit. This is original set of
              services scheduled. When visit actually happens, this will be expanded
              to services actually executed in time of visit.
            format: 'system: Client | application: Product | dataType: Service'
            x-data-type: Reference
        startTime:
          type: string
          description: Visit planed start time.
          format: date-time
          x-data-type: DateTime
        endTime:
          type: string
          description: Visit planed end time.
          format: date-time
          x-data-type: DateTime
        quote:
          type: string
          description: Quote specify amount patient will pay for services specified
            in visit. Quote produce based on price of services scheduled for the visit.
          x-data-type: String
        schedule:
          description: 'Execution plan and schedule for the service. Execution plan
            contains all operations planed for the visit in time visit created with
            assignment of resources to every operation. '
          allOf:
          - $ref: '#/components/schemas/VisitPlan'
        payment:
          type: string
          description: 'Payment collected for the visit. Payment can be collected
            before or after visit, based on organization policies and patient settings. '
          x-data-type: String
      description: 'Visit is a main activity in the network. Visit can be virtual
        or physical. Visit can be in planed state, active or completed. When it in
        planed state it is appointment. '
      x-data-type: Resource
      x-version: 1.0.0
      x-path: /organizations/Infort Technologies/systems/Client/applications/Folder/datasets/Visit
    Severity:
      type: string
      description: 'Severity of the error. Enumerate classification of the error severity
        in execution path.  '
      enum:
      - "0"
      - "1"
      - "2"
      - "3"
      x-enum-metadata:
      - name: Fatal
        value: "0"
        description: A severe error that causes your system to crash, resulting in
          the loss or corruption of unsaved data.
      - name: Error
        value: "1"
        description: A severe error that might cause the loss or corruption of unsaved
          data. Immediate action must be taken to prevent losing data.
      - name: Warning
        value: "2"
        description: Action must be taken at some stage to prevent a severe error
          from occurring in the future.
      - name: Info
        value: "3"
        description: An informative message, usually describing server activity. No
          action is necessary.
      x-data-type: Enum
      x-version: 1.1.0
      x-path: /organizations/Apdax/systems/DifHub/applications/Organization/datasets/Severity
    Error:
      type: object
      properties:
        code:
          type: string
          description: 'Error code. '
          x-data-type: String
        severity:
          description: 'Severity specified how severe error in current execution path. '
          allOf:
          - $ref: '#/components/schemas/Severity'
        text:
          type: string
          description: Error text. When error return text will be formate, based on
            text string, properties and language.
          x-data-type: String
        description:
          type: string
          description: 'Error description contains detailed information about error. '
          x-data-type: String
        entity:
          type: string
          description: URI to object or entity error associated with.
          x-data-type: String
        field:
          type: string
          description: Name of the field error associated with.
          x-data-type: String
      description: |
        Entity encapsulating the details of an error. This allows the recipient to know details about the error and what may have caused the error.
      x-data-type: Resource
      x-version: 1.3.0
      x-path: /organizations/Apdax/systems/DifHub/applications/Organization/datasets/Error
  parameters:
    bearer:
      name: bearer
      in: header
      description: JWT Bearer token
      required: false
      schema:
        type: object
    endTime:
      name: endTime
      in: query
      description: End of time window specified to limit objects with last updated
        in this time window.
      required: false
      schema:
        type: object
    folderId:
      name: folderId
      in: path
      description: Folder maintained by party.
      required: true
      schema:
        type: string
    options:
      name: options
      in: query
      description: 'Options specified additional requirements for returned entity.
        For example reconcile option will require to send events to data lake and
        mark as reconciliation. '
      required: false
      schema:
        type: string
    partyId:
      name: partyId
      in: path
      description: Party folder maintained by.
      required: true
      schema:
        type: string
    search:
      name: search
      in: query
      description: Expression to limit number of entities in response.
      required: false
      schema:
        type: string
    startTime:
      name: startTime
      in: query
      description: Beginning of time window specified to limit objects with last updated
        in this time window.
      required: false
      schema:
        type: object
    patientId:
      name: patientId
      in: path
      description: Patient maintained in the folder.
      required: true
      schema:
        type: string
    practitionerId:
      name: practitionerId
      in: path
      description: The practitioner maintained in the folder.
      required: true
      schema:
        type: string
  requestBodies:
    patient:
      description: Document with patient information.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Patient'
      required: false
    practitioner:
      description: Document with practitioner information.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Practitioner'
      required: false
    folder:
      description: Document with folder information.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Folder'
      required: false
